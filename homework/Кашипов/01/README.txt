Далее компиляция программы происходит следующим образом: g++ sum_by_rows.cpp -o sum_by_rows --std=c++11 -O2
Проведём анализ работы программ:
1. Проведём прогрев процессора, запустив на выполнение одну из тестируемых программ.
2. Сначала несколько раз выполним запуск программы, суммирующеё по строкам, пока результаты (время работы) не стабилизируется
3. Аналогично поступим с программой, суммирующей по столбцам.
4. Получим следующие результаты:
root@dell5470-VirtualBox:/home/relevant.sphere/Advanced programming on C++/01# ./01_by_str
Maxtrix sum :4999999950000000
~36000 us
root@dell5470-VirtualBox:/home/relevant.sphere/Advanced programming on C++/01# ./01_by_row
Maxtrix sum :4999999950000000
~630000 us
5. Видим, что действительно суммирование по столбцам ~17.5 раз медленнее, чем суммирование по строкам.
6. Понять причину этого можно проанализировать работу программы с помощью утилиты valgrind:
root@dell5470-VirtualBox:/home/relevant.sphere/Advanced programming on C++/01# valgrind --tool=cachegrind ./proga1
...
==3241== D   refs:      2,702,615,175  (1,901,710,021 rd   + 800,905,154 wr)
==3241== D1  misses:       12,567,869  (    6,300,519 rd   +   6,267,350 wr)
==3241== LLd misses:       12,542,222  (    6,275,848 rd   +   6,266,374 wr)
==3241== D1  miss rate:           0.5% (          0.3%     +         0.8%  )
==3241== LLd miss rate:           0.5% (          0.3%     +         0.8%  )
==3241== 
==3241== LL refs:          12,569,625  (    6,302,275 rd   +   6,267,350 wr)
...
root@dell5470-VirtualBox:/home/relevant.sphere/Advanced programming on C++/01# valgrind --tool=cachegrind ./proga2
...
==3236== D   refs:      2,802,605,181  (2,001,700,025 rd   + 800,905,156 wr)
==3236== D1  misses:      118,815,176  (  112,547,826 rd   +   6,267,350 wr)
==3236== LLd misses:      104,165,001  (   97,898,627 rd   +   6,266,374 wr)
==3236== D1  miss rate:           4.2% (          5.6%     +         0.8%  )
==3236== LLd miss rate:           3.7% (          4.9%     +         0.8%  )
==3236== 
==3236== LL refs:         118,816,932  (  112,549,582 rd   +   6,267,350 wr)
...
7. Обращая внимание на строку D1 miss rate (статистика промахов в кэше данных L1), замечаем, что количество промахов при суммировании
по столбцам почти на порядок больше, чем при суммировании по строкам. В следствии этого, возрастает количество обращений в кэши 
более высоких уровней (LL refs), чем и обусловлена разность в скорости работы программ.
